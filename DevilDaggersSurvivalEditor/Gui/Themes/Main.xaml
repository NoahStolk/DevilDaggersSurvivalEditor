<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:windows="clr-namespace:DevilDaggersSurvivalEditor.Gui.Windows">
	<Style TargetType="Window">
		<Style.Setters>
			<Setter Property="Background" Value="#222" />
		</Style.Setters>
	</Style>
	<Style TargetType="{x:Type windows:AboutWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:ArenaPresetWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:DownloadSpawnsetWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:HelpWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:LoadingWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:MainWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:ModifySpawnDelayWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:SetTileHeightWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:SettingsWindow}" BasedOn="{StaticResource {x:Type Window}}" />
	<Style TargetType="{x:Type windows:SwitchEnemyTypeWindow}" BasedOn="{StaticResource {x:Type Window}}" />

	<Style TargetType="Menu">
		<Style.Setters>
			<Setter Property="Background" Value="#111" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
	</Style>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="0,4,0,4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderThickness="1">
						<Border.BorderBrush>
							<SolidColorBrush Color="#444" />
						</Border.BorderBrush>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="StackPanel" x:Key="PaddingStackPanel">
		<Style.Setters>
			<Setter Property="Margin" Value="12" />
		</Style.Setters>
	</Style>

	<Style TargetType="Grid" x:Key="SpawnsetHeader">
		<Style.Setters>
			<Setter Property="Margin" Value="7,8,0,0" />
			<Setter Property="Height" Value="30" />
		</Style.Setters>
	</Style>
	<Style TargetType="Grid" x:Key="PaddingGrid">
		<Style.Setters>
			<Setter Property="Margin" Value="12" />
		</Style.Setters>
	</Style>

	<Style TargetType="TextBox">
		<Style.Setters>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="Margin" Value="2" />
			<Setter Property="Height" Value="20" />
			<Setter Property="Background" Value="#222" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="True">
				<Setter Property="Background" Value="#800" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="TextBox" x:Key="ParagraphTextBox" BasedOn="{StaticResource {x:Type TextBox}}">
		<Style.Setters>
			<Setter Property="TextWrapping" Value="WrapWithOverflow" />
			<Setter Property="Padding" Value="6,8,6,8" />
		</Style.Setters>
	</Style>

	<Style TargetType="CheckBox">
		<Style.Setters>
			<Setter Property="Margin" Value="2" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
	</Style>

	<Style TargetType="TextBlock">
		<Style.Setters>
			<Setter Property="TextWrapping" Value="WrapWithOverflow" />
		</Style.Setters>
	</Style>
	<Style TargetType="TextBlock" x:Key="ParagraphTextBlock">
		<Style.Setters>
			<Setter Property="TextWrapping" Value="WrapWithOverflow" />
			<Setter Property="Padding" Value="6,8,6,8" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
	</Style>

	<Style TargetType="ComboBox">
		<Style.Setters>
			<Setter Property="Margin" Value="2" />
			<Setter Property="Padding" Value="4,1,0,0" />
			<Setter Property="MinHeight" Value="20" />
		</Style.Setters>
	</Style>

	<Style TargetType="ComboBoxItem">
		<Style.Setters>
			<Setter Property="Background" Value="#222" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
	</Style>

	<Style TargetType="Label">
		<Style.Setters>
			<Setter Property="Padding" Value="2" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Foreground" Value="#ddd" />
		</Style.Setters>
	</Style>
	<Style TargetType="Label" x:Key="TitleLabel" BasedOn="{StaticResource {x:Type Label}}">
		<Style.Setters>
			<Setter Property="FontSize" Value="20" />
		</Style.Setters>
	</Style>
	<Style TargetType="Label" x:Key="BoldLabel" BasedOn="{StaticResource {x:Type Label}}">
		<Style.Setters>
			<Setter Property="Margin" Value="0,0,0,6" />
			<Setter Property="Padding" Value="3,2,2,2" />
			<Setter Property="FontWeight" Value="Bold" />
		</Style.Setters>
	</Style>
	<Style TargetType="Label" x:Key="NumericSpawnLabel" BasedOn="{StaticResource {x:Type Label}}">
		<Style.Setters>
			<Setter Property="Padding" Value="6,2,6,2" />
			<Setter Property="HorizontalContentAlignment" Value="Right" />
		</Style.Setters>
	</Style>

	<Style TargetType="Button">
		<Style.Setters>
			<Setter Property="Margin" Value="2" />
			<Setter Property="Background" Value="#222" />
			<Setter Property="Foreground" Value="#ddd" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="#88f" />
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="#468" />
								<Setter Property="BorderBrush" TargetName="border" Value="#08f" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="#68a" />
								<Setter Property="BorderBrush" TargetName="border" Value="#0af" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="border" Value="#555" />
								<Setter Property="BorderBrush" TargetName="border" Value="#444" />
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#999" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>
	<Style TargetType="Button" x:Key="OkButton" BasedOn="{StaticResource {x:Type Button}}">
		<Style.Setters>
			<Setter Property="Width" Value="128" />
			<Setter Property="Margin" Value="2,6,2,2" />
			<Setter Property="IsDefault" Value="True" />
		</Style.Setters>
	</Style>

	<Style TargetType="Image" x:Key="Logo">
		<Style.Setters>
			<Setter Property="Width" Value="96" />
			<Setter Property="Source" Value="/Content/Images/Icon/Icon32.png" />
			<Setter Property="RenderOptions.BitmapScalingMode" Value="NearestNeighbor" />
		</Style.Setters>
	</Style>

	<Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
		<Style.Setters>
			<Setter Property="Margin" Value="2" />
		</Style.Setters>
	</Style>

	<Style TargetType="Slider">
		<Style.Setters>
			<Setter Property="Margin" Value="4,0,4,0" />
		</Style.Setters>
	</Style>
</ResourceDictionary>